buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.11.6"
        classpath 'se.transmode.gradle:gradle-docker:1.2'
    }
}

version '0.0.1'
group 'jacobaseverson'

apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.grails.grails-web'
apply plugin: 'org.grails.grails-gsp'
apply plugin: 'asset-pipeline'
apply plugin: 'docker'

repositories {
    mavenLocal()
    maven { url 'https://repo.grails.org/grails/core' }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-logging'
    compile 'org.springframework.boot:spring-boot-autoconfigure'
    compile 'org.grails:grails-core'
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile 'org.springframework.boot:spring-boot-starter-tomcat'
    compile 'org.grails:grails-dependencies'
    compile 'org.grails:grails-web-boot'
    compile 'org.grails.plugins:cache'
    compile 'org.grails.plugins:scaffolding'
    compile 'org.kohsuke:wordnet-random-name:1.3'
    console 'org.grails:grails-console'
    profile 'org.grails.profiles:web'
    runtime 'com.bertramlabs.plugins:asset-pipeline-grails:2.11.6'
    testCompile 'org.grails:grails-plugin-testing'
    testCompile 'org.grails.plugins:geb'
    testRuntime 'org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1'
    testRuntime 'net.sourceforge.htmlunit:htmlunit:2.18'
}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
}


assets {
    minifyJs = true
    minifyCss = true
}

task buildDocker(type: Docker, dependsOn: assemble) {
    push = true
    applicationName = jar.baseName
    dockerfile = file('src/docker/Dockerfile')
    doFirst {
        copy {
            from jar
            into stageDir
        }
    }
}
